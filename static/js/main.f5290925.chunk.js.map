{"version":3,"sources":["components/TodoList/TodoList.tsx","components/TodoFilter/TodoFilter.tsx","components/Loader/Loader.tsx","api.ts","Filter.tsx","components/TodoModal/TodoModal.tsx","App.tsx","index.tsx"],"names":["TodoList","todos","selectedTodo","onSelect","className","map","todo","classNames","id","completed","title","type","onClick","TodoFilter","query","filterType","setQuery","setFilterType","value","onChange","event","target","placeholder","style","pointerEvents","Loader","get","url","delay","fullURL","Promise","resolve","setTimeout","then","fetch","res","json","Filter","TodoModal","selectTodo","closeModalWin","useState","loading","setLoading","user","setUser","useEffect","userId","foundUser","catch","finally","href","email","name","App","setTodos","selectedTodoId","setSelectedTodoId","isTodosLoaded","setIsTodosLoaded","hasError","setHasError","All","selectTodoId","useCallback","todoId","todoFilter","useMemo","filter","toLowerCase","includes","Active","Completed","find","length","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.f5290925.chunk.js","sourcesContent":["import React from 'react';\nimport classNames from 'classnames';\nimport { Todo } from '../../types/Todo';\n\ntype Props = {\n  todos: Todo[]\n  selectedTodo: number,\n  onSelect: (todoId: number) => void,\n};\n\nexport const TodoList: React.FC<Props> = ({\n  todos,\n  selectedTodo,\n  onSelect,\n}) => (\n  <table className=\"table is-narrow is-fullwidth\">\n    <thead>\n      <tr>\n        <th>#</th>\n        <th>\n          <span className=\"icon\">\n            <i className=\"fas fa-check\" />\n          </span>\n        </th>\n        <th>Title</th>\n        <th> </th>\n      </tr>\n    </thead>\n\n    <tbody>\n      {todos.map(todo => (\n        <tr\n          data-cy=\"todo\"\n          className={classNames(\n            { 'has-background-info-light': selectedTodo === todo.id },\n          )}\n          key={todo.id}\n        >\n          <td className=\"is-vcentered\">{todo.id}</td>\n          <td className=\"is-vcentered\">\n            {\n              todo.completed && (\n                <span className=\"icon\" data-cy=\"iconCompleted\">\n                  <i className=\"fas fa-check\" />\n                </span>\n              )\n            }\n          </td>\n          <td className=\"is-vcentered is-expanded\">\n            <p\n              className={classNames(\n                { 'has-text-success': todo.completed },\n                { 'has-text-danger': !todo.completed },\n              )}\n            >\n              {todo.title}\n            </p>\n          </td>\n          <td className=\"has-text-right is-vcentered\">\n            <button\n              data-cy=\"selectButton\"\n              className=\"button\"\n              type=\"button\"\n              onClick={() => onSelect(todo.id)}\n              aria-labelledby=\"button-label\"\n            >\n              <span className=\"icon\">\n                <i\n                  className={classNames(\n                    'far',\n                    { 'fa-eye': selectedTodo !== todo.id },\n                    { 'fa-eye-slash': selectedTodo === todo.id },\n                  )}\n                />\n              </span>\n            </button>\n          </td>\n        </tr>\n      ))}\n    </tbody>\n  </table>\n);\n","import React from 'react';\n\ntype Props = {\n  query: string,\n  filterType: string,\n  setQuery: React.Dispatch<React.SetStateAction<string>>\n  setFilterType: React.Dispatch<React.SetStateAction<string>>,\n};\n\nexport const TodoFilter: React.FC<Props> = ({\n  query,\n  filterType,\n  setQuery,\n  setFilterType,\n}) => {\n  return (\n    <form className=\"field has-addons\">\n      <p className=\"control\">\n        <span className=\"select\">\n          <select\n            data-cy=\"statusSelect\"\n            value={filterType}\n            onChange={(event) => setFilterType(event.target.value)}\n          >\n            <option value=\"all\">All</option>\n            <option value=\"active\">Active</option>\n            <option value=\"completed\">Completed</option>\n          </select>\n        </span>\n      </p>\n\n      <p className=\"control is-expanded has-icons-left has-icons-right\">\n        <input\n          data-cy=\"searchInput\"\n          type=\"text\"\n          className=\"input\"\n          placeholder=\"Search...\"\n          value={query}\n          onChange={(event) => setQuery(event.target.value)}\n        />\n        <span className=\"icon is-left\">\n          <i className=\"fas fa-magnifying-glass\" />\n        </span>\n\n        <span className=\"icon is-right\" style={{ pointerEvents: 'all' }}>\n          {query && (\n            <button\n              data-cy=\"clearSearchButton\"\n              type=\"button\"\n              className=\"delete\"\n              onClick={() => setQuery('')}\n              aria-labelledby=\"button-label\"\n            />\n          )}\n\n        </span>\n      </p>\n    </form>\n  );\n};\n","import React from 'react';\nimport './Loader.scss';\n\nexport const Loader: React.FC = () => (\n  <div className=\"Loader\" data-cy=\"loader\">\n    <div className=\"Loader__content\" />\n  </div>\n);\n","import { Todo } from './types/Todo';\nimport { User } from './types/User';\n\n// eslint-disable-next-line max-len\nconst BASE_URL = 'https://mate-academy.github.io/react_dynamic-list-of-todos/api';\n\n// This function creates a promime\n// that is resolved after a given delay\nfunction wait(delay: number): Promise<void> {\n  return new Promise(resolve => {\n    setTimeout(resolve, delay);\n  });\n}\n\nfunction get<T>(url: string): Promise<T> {\n  // eslint-disable-next-line prefer-template\n  const fullURL = BASE_URL + url + '.json';\n\n  // we add some delay to see now the laoder works\n  return wait(300)\n    .then(() => fetch(fullURL))\n    .then(res => res.json());\n}\n\nexport const getTodos = () => get<Todo[]>('/todos');\n\nexport const getUser = (userId: number) => get<User>(`/users/${userId}`);\n","export enum Filter {\n  All = 'all',\n  Active = 'active',\n  Completed = 'completed',\n}\n","import React, { useState, useEffect } from 'react';\nimport { Todo } from '../../types/Todo';\nimport { Loader } from '../Loader';\nimport { getUser } from '../../api';\nimport { User } from '../../types/User';\n\ntype Props = {\n  selectTodo: Todo,\n  closeModalWin: () => void,\n};\n\nexport const TodoModal: React.FC<Props> = ({\n  selectTodo,\n  closeModalWin,\n}) => {\n  const [loading, setLoading] = useState(true);\n  const [user, setUser] = useState<User | null>(null);\n\n  useEffect(() => {\n    setLoading(true);\n\n    getUser(selectTodo?.userId || 0)\n      .then(foundUser => {\n        setUser(foundUser);\n        setLoading(false);\n      })\n      .catch(() => setUser(null))\n      .finally(() => setLoading(false));\n  }, [selectTodo.userId]);\n\n  return (\n    <div className=\"modal is-active\" data-cy=\"modal\">\n      <div className=\"modal-background\" />\n\n      {loading ? (\n        <Loader />\n      ) : (\n        <div className=\"modal-card\">\n          <header className=\"modal-card-head\">\n            <div\n              className=\"modal-card-title has-text-weight-medium\"\n              data-cy=\"modal-header\"\n            >\n              {`Todo #${selectTodo.id}`}\n            </div>\n\n            <button\n              type=\"button\"\n              className=\"delete\"\n              data-cy=\"modal-close\"\n              onClick={closeModalWin}\n              aria-labelledby=\"button-label\"\n            />\n          </header>\n\n          <div className=\"modal-card-body\">\n            <p className=\"block\" data-cy=\"modal-title\">\n              {selectTodo.title}\n            </p>\n\n            <p className=\"block\" data-cy=\"modal-user\">\n              <strong className=\"has-text-danger\">\n                {selectTodo.completed ? 'Done' : 'Planned'}\n              </strong>\n\n              {' by '}\n\n              <a href={`mailto:${user?.email}`}>\n                {user?.name}\n              </a>\n            </p>\n          </div>\n        </div>\n      )}\n    </div>\n  );\n};\n","import React, {\n  useCallback, useMemo, useState, useEffect,\n} from 'react';\nimport 'bulma/css/bulma.css';\nimport '@fortawesome/fontawesome-free/css/all.css';\n\nimport { TodoList } from './components/TodoList';\nimport { TodoFilter } from './components/TodoFilter';\nimport { TodoModal } from './components/TodoModal';\nimport { Loader } from './components/Loader';\n\nimport { getTodos } from './api';\nimport { Todo } from './types/Todo';\nimport { Filter } from './Filter';\n\nexport const App: React.FC = () => {\n  const [todos, setTodos] = useState<Todo[]>([]);\n  const [selectedTodoId, setSelectedTodoId] = useState(0);\n  const [query, setQuery] = useState('');\n  const [isTodosLoaded, setIsTodosLoaded] = useState(false);\n  const [hasError, setHasError] = useState(false);\n  const [filterType, setFilterType] = useState<string>(Filter.All);\n\n  const selectTodoId = useCallback((todoId: number) => {\n    setSelectedTodoId(todoId);\n  }, []);\n\n  const closeModalWin = useCallback(() => {\n    setSelectedTodoId(0);\n  }, []);\n\n  const todoFilter = useMemo(() => {\n    const cleanQuerty = todos\n      .filter(todo => todo.title.toLowerCase().includes(query.toLowerCase()));\n\n    return cleanQuerty.filter(todo => {\n      switch (filterType) {\n        case Filter.Active:\n          return !todo.completed;\n\n        case Filter.Completed:\n          return todo.completed;\n\n        default:\n          return todo;\n      }\n    });\n  }, [todos, query, filterType]);\n\n  useEffect(() => {\n    setIsTodosLoaded(true);\n    getTodos()\n      .then(setTodos)\n      .catch(() => setHasError(true))\n      .finally(() => setIsTodosLoaded(false));\n  }, []);\n\n  const selectTodo = useMemo(() => {\n    return todos.find(todo => todo.id === selectedTodoId);\n  }, [selectedTodoId, todos]);\n\n  return (\n    <>\n      <div className=\"section\">\n        <div className=\"container\">\n          <div className=\"box\">\n            <h1 className=\"title\">Todos:</h1>\n\n            <div className=\"block\">\n              <TodoFilter\n                query={query}\n                filterType={filterType}\n                setQuery={setQuery}\n                setFilterType={setFilterType}\n              />\n            </div>\n\n            <div className=\"block\">\n              {!isTodosLoaded\n                ? (\n                  <TodoList\n                    selectedTodo={selectedTodoId}\n                    onSelect={selectTodoId}\n                    todos={todoFilter}\n                  />\n                ) : (\n                  <Loader />\n                )}\n\n              {hasError && (\n                <p>\n                  Error:\n                  {hasError}\n                </p>\n              )}\n\n              {(query && !todoFilter.length) && (\n                <p>No todos matched filters</p>\n              )}\n            </div>\n          </div>\n        </div>\n      </div>\n\n      {selectTodo && (\n        <TodoModal\n          selectTodo={selectTodo}\n          closeModalWin={closeModalWin}\n        />\n      ) }\n    </>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}